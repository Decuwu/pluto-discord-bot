local TOKEN <const> = "Your token here :)"

package.path = "lib\\?.lua"
package.cpath = "lib\\?.dll"
SOUP_WORKING_DIR = "lib\\"
soup = require "soup-apigen"

package.path = ""
package.cpath = ""
json = require "json"

package.path = "modules\\?.pluto"
scheduler = require "scheduler"

local heartbeater = require "discord-heartbeater"

soup_scheduler = soup.Scheduler.new()
scheduler.addloop(function()
	soup_scheduler:tick()
end)

local my_user = {}
scheduler.add(function()
	print("Connecting to gateway.discord.gg...")
	local ewsct = soup.EstablishWebSocketConnectionTask.new("wss://gateway.discord.gg/")
	soup_scheduler:add(ewsct)
	while not ewsct:isWorkDone() do
		coroutine.yield()
	end
	local ws = ewsct:getSocket()
	print("Connected to gateway.")
	local p = ws:wsRecv()
	while p:isPending() do
		coroutine.yield()
	end
	local data = p:getData()
	print(data)
	heartbeater.kickOff(ws, json.decode(data).d.heartbeat_interval)
	local identify = [[{"op":2,"d":{"token":"]]
	identify ..= TOKEN
	identify ..= [[","capabilities":4093,"properties":{"os":"Windows","browser":"Chrome","device":"","system_locale":"en-GB","browser_user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36","browser_version":"111.0.0.0","os_version":"10","referrer":"","referring_domain":"","referrer_current":"","referring_domain_current":"","release_channel":"stable","client_build_number":182983,"client_event_source":null,"design_id":0},"presence":{"status":"online","since":0,"activities":[],"afk":false},"compress":false,"client_state":{"guild_versions":{},"highest_last_message_id":"0","read_state_version":0,"user_guild_settings_version":-1,"user_settings_version":-1,"private_channels_version":"0","api_code_version":0}}}]]
	ws:wsSend(identify)
	while true do
		p = ws:wsRecv()
		while p:isPending() do
			coroutine.yield()
		end
		data = p:getData()
		print(data)
		data = json.decode(data)
		if data.s then
			heartbeater.last_seq = data.s
		end
		if data.t then
			switch data.t do
				case "READY":
					my_user = data.d.user
					break
				case "MESSAGE_CREATE":
					local mentions_me = false
					for data.d.mentions as mention do
						if mention.id == my_user.id then
							mentions_me = true
							break
						end
					end
					if mentions_me then
						print("I've been mentioned!")
					end
					break
			end
		end
	end
end)

scheduler.run()
